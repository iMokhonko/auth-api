{
  "serviceName": "Auth API",

  "terraformResources": [
    {
      "folderName": "database",
      "description": "Create DynamoDB table for users",

      "outputName": "database",

      "global": true
    },
    {
      "folderName": "kms",
      "description": "Create KMS key for users passwords",

      "outputName": "kms",

      "global": true
    },
    {
      "folderName": "s3",
      "description": "Create bucket for lambdas code",

      "outputName": "s3",

      "global": true
    },
    {
      "folderName": "dns",
      "description": "Create dns records in route 53 for service and create ACM certificates",

      "outputName": "dns",

      "global": true
    },
    {
      "folderName": "config",
      "description": "Create record in aws parameter store and save DNS address of deployed service",

      "outputName": "config",
      
      "variables": {
        "dns_address": "<tf-outputs:dns.dns_address>"
      },

      "global": true
    },
    {
      "folderName": "api-gateway",
      "description": "Create API Gateway",

      "outputName": "api_gw",

      "global": true
    },
    {
      "folderName": "secrets-manager",
      "description": "Create JWT secret for users JWT tokens",

      "outputName": "secrets_manager",

      "global": true
    },

    {
      "folderName": "api-gateway-stage",
      "description": "Create API Gateway Stage",

      "outputName": "api_gw_stage",

      "variables": {
        "api_gateway_id": "<tf-outputs:api_gw.api_gw_id>"
      }
    },
    {
      "folderName": "lambdas",
      "description": "Create lambda functions",

      "outputName": "lambdas",

      "variables": {
        "s3_bucket_id": "<tf-outputs:s3.s3_bucket_id>",
        "dynamodb_table_arn": "<tf-outputs:database.dynamodb_table_arn>",
        "secret_arn": "<tf-outputs:secrets_manager.secret_arn>"
      }
    },
    {
      "folderName": "integrations",
      "description": "Create integration between Api Gateway and lambdas",

      "outputName": "integration",

      "variables": {
        "api_gw_id": "<tf-outputs:api_gw.api_gw_id>",
        "api_gw_execution_arn": "<tf-outputs:api_gw.api_gw_execution_arn>",

        "sign_up_lambda_invoke_arn": "<tf-outputs:lambdas.sign_up_lambda_invoke_arn>",
        "sign_up_lambda_function_name": "<tf-outputs:lambdas.sign_up_lambda_function_name>",

        "sign_in_lambda_invoke_arn": "<tf-outputs:lambdas.sign_in_lambda_invoke_arn>",
        "sign_in_lambda_function_name": "<tf-outputs:lambdas.sign_in_lambda_function_name>"
      }
    },
    {
      "folderName": "cloudfront",
      "description": "Create distribution for API for current env & feature",

      "outputName": "distribution",
      
      "variables": {
        "route53_zone_id": "<tf-outputs:dns.route53_zone_id>",
        "acm_master_certificate_arn": "<tf-outputs:dns.acm_master_certificate_arn>",
        "acm_features_certificate_arn": "<tf-outputs:dns.acm_features_certificate_arn>",
        
        "api_endpoint_url": "<tf-outputs:api_gw.api_endpoint_url>"
      }
    }
  ],

  "deployChain": [
    "find ./functions -mindepth 1 -maxdepth 1 -type d -exec cp infrastructure.json {} \\;",
    "find ./functions -mindepth 1 -maxdepth 1 -type d -exec cp env.json {} \\;",

    "cd functions/sign-in/ && zip -r __bundle__.zip *",
    "cd functions/sign-up/ && zip -r __bundle__.zip *",

    "aws s3 cp functions/sign-up/__bundle__.zip s3://<tf-outputs:s3.s3_bucket_id>/dev/master/sign-up-lambda.zip --profile default",
    "aws s3 cp functions/sign-in/__bundle__.zip s3://<tf-outputs:s3.s3_bucket_id>/dev/master/sign-in-lambda.zip --profile default",

    "rm functions/sign-up/__bundle__.zip && rm functions/sign-in/__bundle__.zip",

    "aws lambda update-function-code --function-name <tf-outputs:lambdas.sign_up_lambda_function_name> --s3-bucket <tf-outputs:s3.s3_bucket_id> --s3-key dev/master/sign-up-lambda.zip",
    "aws lambda update-function-code --function-name <tf-outputs:lambdas.sign_in_lambda_function_name> --s3-bucket <tf-outputs:s3.s3_bucket_id> --s3-key dev/master/sign-in-lambda.zip"
  ]
}